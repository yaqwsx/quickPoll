worker_processes  1;

events {
    worker_connections  1024;
}

error_log ${CWD}/run/error.log warn;

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # To get different users
    map $http_user_agent $test_user {
        "~Chrome" "xmrazek7";
        "~Firefox" "xstill";
        default       "nobody";
    }

    server {
        listen 8888 default_server;
        listen [::]:8888 default_server;

        access_log ${CWD}/run/access.log combined;

        location /socket.io/ {
            # Pass API to flask
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            include /etc/nginx/uwsgi_params;
            uwsgi_param  AUTH_USER  $test_user;
            uwsgi_pass unix:${CWD}/run/quickPoll.sock;
        }

        location /sockjs-node {
            # React dev live reload
            # Not used in production
            proxy_pass http://127.0.0.1:3000;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;
        }

        location / {
            # Pass root to react dev server
            # In production, serve static files via nginx and pass all routes
            # to static files. If they do not exists, pass it to index.html
            proxy_pass http://127.0.0.1:3000;
        }
    }

}